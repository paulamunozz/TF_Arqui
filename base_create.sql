-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.evento
(
    id_evento integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_municipalidad integer NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(300) COLLATE pg_catalog."default" NOT NULL,
    peso_objetivo numeric(5, 2) NOT NULL,
    fecha_inicio date NOT NULL,
    fecha_fin date NOT NULL,
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    situacion boolean NOT NULL,
    peso_actual numeric(5, 2) NOT NULL,
    bonificacion double precision NOT NULL,
    metodo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT evento_pk PRIMARY KEY (id_evento)
);

CREATE TABLE IF NOT EXISTS public.evento_x_vecino
(
    id_exv integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_evento integer NOT NULL,
    id_vecino integer NOT NULL,
    comentario character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT evento_x_vecino_pk PRIMARY KEY (id_exv)
);

CREATE TABLE IF NOT EXISTS public.logro
(
    id_logro integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_vecino integer NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT logro_pk PRIMARY KEY (id_logro)
);

CREATE TABLE IF NOT EXISTS public.municipalidad
(
    id_municipalidad integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_usuario integer NOT NULL,
    distrito character varying(50) COLLATE pg_catalog."default" NOT NULL,
    puntajetotal integer NOT NULL,
    puesto integer NOT NULL,
    CONSTRAINT municipalidad_pk PRIMARY KEY (id_municipalidad)
);

CREATE TABLE IF NOT EXISTS public.reciclaje
(
    id_reciclaje integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_vecino integer NOT NULL,
    peso numeric(5, 2) NOT NULL,
    tipo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    metodo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    fecha date NOT NULL,
    puntaje integer NOT NULL,
    CONSTRAINT reciclaje_pk PRIMARY KEY (id_reciclaje)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    codigo character varying(8) COLLATE pg_catalog."default" NOT NULL,
    contrasena character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT usuario_pk PRIMARY KEY (id_usuario)
);

CREATE TABLE IF NOT EXISTS public.vecino
(
    id_vecino integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_usuario integer NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    genero character varying(1) COLLATE pg_catalog."default" NOT NULL,
    edad integer NOT NULL,
    distrito character varying(50) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(150) COLLATE pg_catalog."default" NOT NULL,
    puntajetotal integer NOT NULL,
    icono integer NOT NULL,
    puesto integer NOT NULL,
    CONSTRAINT vecino_pk PRIMARY KEY (id_vecino)
);

ALTER TABLE IF EXISTS public.evento
    ADD CONSTRAINT evento_municipalidad FOREIGN KEY (id_municipalidad)
    REFERENCES public.municipalidad (id_municipalidad) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.evento_x_vecino
    ADD CONSTRAINT evento_x_vecino_evento FOREIGN KEY (id_evento)
    REFERENCES public.evento (id_evento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.evento_x_vecino
    ADD CONSTRAINT evento_x_vecino_vecino FOREIGN KEY (id_vecino)
    REFERENCES public.vecino (id_vecino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.logro
    ADD CONSTRAINT logro_vecino FOREIGN KEY (id_vecino)
    REFERENCES public.vecino (id_vecino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.municipalidad
    ADD CONSTRAINT municipalidad_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reciclaje
    ADD CONSTRAINT reciclaje_vecino FOREIGN KEY (id_vecino)
    REFERENCES public.vecino (id_vecino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.vecino
    ADD CONSTRAINT vecino_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;